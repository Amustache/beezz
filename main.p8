pico-8 cartridge // http://www.pico-8.com
version 18
__lua__
-- beeeeeees
-- by us

-- ** technical ** --
function delay(frames)
-- wait, in frames
-- 30 fps
 for x=1,frames do
  yield()
 end
end

function abs_box(o)
-- absolute box for object o
 local box = {}
 box.x1 = o.box.x1 + o.x
 box.y1 = o.box.y1 + o.y
 box.x2 = o.box.x2 + o.x
 box.y2 = o.box.y2 + o.y
 return box
end

function iou(o1,o2)
-- intersection over union of two objects
-- return percentage in [0,1], 1 is perfect match
 local box_o1 = abs_box(o1)
 local box_o2 = abs_box(o2)
 
 -- x,y coordinates of intersection
 local x1 = max(box_o1.x1,box_o2.x1)
 local y1 = max(box_o1.y1,box_o2.y1)
 local x2 = min(box_o1.x2,box_o2.x2)
 local y2 = min(box_o1.y2,box_o2.y2)
 
 -- area of intersection
 local inter_area = max(0, x2 - x1 + 1) * max(0, y2 - y1 + 1)
 
 -- area of both boxes
 local o1_area = (box_o1.x2 - box_o1.x1 + 1) * (box_o1.y2 - box_o1.y1 + 1)
 local o2_area = (box_o2.x2 - box_o2.x1 + 1) * (box_o2.y2 - box_o2.y1 + 1)

 return inter_area / (o1_area + o2_area - inter_area)
end

function debug_infos(x,y)
 if(btn(0)) then print("⬅️",x,y+6,3) end
 if(btn(1)) then print("➡️",x+16,y+6,3) end
 if(btn(2)) then print("⬆️",x+8,y,3) end
 if(btn(3)) then print("⬇️",x+8,y+6,3) end
 if(btn(4)) then print("🅾️",x+16,y,3) end
 if(btn(5)) then print("❎",x,y,3) end
 print("tmr:"..p.tmr,x,y+16,3)
 print("cur_pln:"..p.cur_pln,x,y+24,3)
 print("tot_pln:"..p.tot_pln,x,y+32,3)
end

-- ** bee - general ** --
function init_bee_base()
 p={
  name="barry",
  tot_pln=0,  -- cumulative polen
  cur_pln=0,  -- current polen
  max_pln=10,  -- max usable polen before slowdown in speed
  cur_spd=3,  -- speed
  max_spd=3,
  x=64,  -- x,y coordinate
  y=64,
  box={x1=1,y1=1,x2=14,y2=14},  -- collision box
  sp=0,  -- current sprite
  sp_st=0,  -- first sprite of the animation
  sp_sz=2,  -- sprite size
  flp_x=false,  -- should the sprite be flipped horizontally
  flp_y=false,  -- should the sprite be flipped vertically
  action=false,  -- can't move if action is true
  tmr=0  -- internal timer
 }
end

function draw_bee()
 spr(p.sp,p.x,p.y,p.sp_sz,p.sp_sz,p.flp_x,p.flp_y)
end

-- ** actual game ** --
function _init()
 init_bee_base()
 -- todo
 exploration_init()
end

function _update()
 -- todo
 exploration_update()
end

function _draw()
 -- todo
 exploration_draw()
 debug_infos(0,0)
end
-->8
-- exploration
-- ** exploration - initialisation ** --
function exploration_init()
 -- flowers
 flowers={}
 for i=1,rnd(10) do
  add(flowers,{
   x=rnd(100)+10,  -- x,y coordinates
   y=rnd(100)+10,
   box={x1=2,y1=3,x2=29,y2=29},  -- collision box
   sp=42,  -- current sprite
   sp_bs_clr=13,  -- base color, used to change the color
   sp_clr=rnd(4)+13,  -- final color
   sp_sz=4,  -- sprite size
   pln=flr(rnd(6))  -- polen quantity
  })
 end
 
 tlrnc=0.25  -- percentage of match between bee and flower
end

-- ** exploration - updating ** --
function update_bee()
 p.tmr+=1  -- internal timer. 30fps
 
 -- action
 if(not p.action) then
  -- animation
  if(p.tmr == 10) then
   p.sp = p.sp_st
  end
  if(p.tmr >= 20) then
   p.sp += p.sp_sz
   p.tmr = 0  -- restart timer
  end
  if(btn(0)) then  -- left
   p.sp_st=32
   p.flp_x=true
   if(p.x > 0) then
    p.x-=p.cur_spd
   end
  end
  if(btn(1)) then  -- right
   p.sp_st=32
   p.flp_x=false
   if(p.x < 127 - p.sp_sz * 8) then
    p.x+=p.cur_spd
   end
  end
  if(btn(2)) then  -- up
   p.sp_st=0
   p.flp_y=false
   if(p.y > 0) then
    p.y-=p.cur_spd
   end
  end
  if(btn(3)) then  -- down
   p.sp_st=0
   p.flp_y=true
   if(p.y < 127 - p.sp_sz * 8) then
    p.y+=p.cur_spd
   end
  end
  -- action (X) -- todo talk w/ bees
  if btn(5) then
   p.action=true  -- lock the player
   p.tmr = 0  -- restart timer
  end
 else
  get_pln()
 end
 
 -- polen
  p.cur_spd=p.max_spd-(p.cur_pln/(p.max_pln + 1))
end

function check_flower(f)
 if(iou(p,f) >= tlrnc) then
  p.cur_pln+=f.pln
  f.pln = 0
 end
end

function get_pln()
 if(p.tmr == 15) then
  p.sp = p.sp_st + 2 * p.sp_sz
 end
 if(p.tmr == 30) then
  p.sp += p.sp_sz
 end
 if(p.tmr == 45) then
  p.sp += p.sp_sz
 end
 if(p.tmr == 75) then
  foreach(flowers,check_flower)
 end
 if(p.tmr == 120) then
  p.sp -= p.sp_sz
 end
 if(p.tmr == 135) then
  p.sp -= p.sp_sz
 end
 if(p.tmr == 150) then
  p.sp -= p.sp_sz
  p.action=false
 end
end

function exploration_update()
 update_bee()
end

-- ** exploration - drawing ** --
function draw_flower(f)
 pal(f.sp_bs_clr,f.sp_clr)
 if(f.pln == 0) then
  pal(9,1)
 end
 spr(f.sp,f.x,f.y,f.sp_sz,f.sp_sz)
 pal() 
 if(f.pln > 0) then
  for i=1,f.pln do
   pset(f.x+4*f.sp_sz+i*.8,f.y+4*f.sp_sz+i*.7,9)
   pset(1+f.x+4*f.sp_sz+i*.8,f.y+4*f.sp_sz+i*.7,9)
   pset(f.x+4*f.sp_sz+i*.8,1+f.y+4*f.sp_sz+i*.7,9)
   pset(1+f.x+4*f.sp_sz+i*.8,1+f.y+4*f.sp_sz+i*.7,9)
  end
 end
end

function testt(f)
 if(iou(p,f) >= tlrnc) then
  print("flower! "..iou(p,f),26,8,rnd(8))
 else
  print("bzz...",2,8,2)
 end
end

function exploration_draw()
 cls()
 foreach(flowers,draw_flower)
 draw_bee() 
end
-->8
-- story


__gfx__
000000000000000000000099900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000d222222d
0000009990000000000009191900000000000000000000000000000000000000000000000000000000000677067000000000000000000000000000001d2222d6
0000091919000000000002222200000000000019100000000000000000000000000000000000000000000d677677000000000670077000000000000011dddd66
00000222220000000007776d6777000000000022200000000000001910000000000000000000000000000d66776700000000d677677700000000000011dddd66
0000776d67700000007776d2d67770000000006d600000000000007d700000000000001910000000000000d6776700000000d677767700000000000011dddd66
000776d2d677000007766d999d677700000076d2d6700000000007d2d700000000000072700000000000222d6767000000000d67767700000000000011dddd66
007776d9d67770000766d22222d6670000076d999d67000000007d999d700000000007696700000000022929d6260000000022d6766700000000000011dddd66
00776d222d67700006dd9999999dd6000066d22222d660000000d22222d000000000062226000000001929292d2999000002292d672600000000000011dddd66
0076d99999d670000000222222200000000009999900000000000099900000000000009990000000111929292929919000192929d6299900d666666711dddd66
006dd22222dd600000009999999000000000022222000000000000222000000000000001000000000019292929299990111929292d2991902d66667611dddd66
000099999990000000002222222000000000099999000000000000010000000000000000000000000002292929299900001929292929999022dddd6611dddd66
000022222220000000000999990000000000002220000000000000000000000000000000000000000000292922000000000229292929990022dddd6611dddd66
000009999900000000000011100000000000000100000000000000000000000000000000000000000000000000000000000029292200000022dddd6611dddd66
000000111000000000000001000000000000000100000000000000000000000000000000000000000000000000000000000000000000000022dddd6611dddd66
0000000100000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000221111d61d666676
00000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002111111dd6666667
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000067700000000000000000000000000000000000000000000000000000000000777777700000007777777000000000000000000000
000000677700000000000000d6770000000000006000000000000000000000000000000000000000000007776777610000667777777700000000000000000000
000000d67770000000000000d6677000000000006700000000000000000000000000000000000000000007776677611000677776677700000000000000000000
000029dd67770000000002929d67700000000000d670000000000000d700000000000000000000000000077771177d10011676d1177600000000000000000000
00092929d66729000000929292d67290000009292d600000000000002d70000000000000670000000000066677d11d111116dd17776600000000000000000000
001929292dd6219000019292929d62190000292929d621000000002929d710000000000926710000000001dd677d1d222211d117776600000000000000000000
11192929292d2990011192929292d29900112929292d290000000129292d900000000019292900000000011dd66d127777221167766600000000000000000000
001929292dd6219000019292929d62190000292929d621000000002929d71000000000092671000000000011dddd279999721d66661000000000000000000000
00092929d66729000000929292d67290000009292d600000000000002d7000000000000067000000000000011dd2299999922dddd11000000000000000000000
000029dd67770000000002929d67700000000000d670000000000000d70000000000000000000000000000661112999999992ddd110000000000000000000000
000000d67770000000000000d67770000000000067000000000000000000000000000000000000000000777666d2999999992111166777000000000000000000
000000677700000000000000d67700000000000060000000000000000000000000000000000000007777776666d2299999922dd6666777770000000000000000
000000000000000000000000677000000000000000000000000000000000000000000000000000007777776ddddd22999922ddddd66667770000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000666711111111292222921111111116770000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000011666666dddd22999922dddd666666710000000000000000
97111111111111191111111997111111333333333333333300000000000000000000000000000000011d66666ddd12222221ddd6666666110000000000000000
971111111111111911111119971111113313d3333dd3dd33000000000000000000000000000000000011dddddddd11222211ddddddddd1100000000000000000
971111111111111911111119971111113333333333313d3300000000000000000000000000000000000111dd11111111111111111dd111000000000000000000
97111111111111191111111997711111333337333331333100000000000000000000000000000000000001111dddd1dd1dd1dddd111100000000000000000000
971111111111111911111199999771113d337973333333330000000000000000000000000000000000000066677d1ddd1ddd1776610000000000000000000000
97111111111111191111999999999771313dd73333333d3100000000000000000000000000000000000006666761666d1d666177666000000000000000000000
9977711111111199111999911999999733333333133333330000000000000000000000000000000000000666761776dd1d677617766700000000000000000000
1999771111119991199991111119999933333333333333330000000000000000000000000000000000000767717776d111667761777700000000000000000000
1199997111199911999111111111199933133dd3333333330000000000000000000000000000000000000777767766d101167776677700000000000000000000
111199977999111197111111111111193d133333333d3333000000000000000000000000000000000000077777776d1100666777777700000000000000000000
11111199999111119711111111111119333333333337333300000000000000000000000000000000000007777776611000666677777700000000000000000000
11111119991111119711111111111119333333333379733300000000000000000000000000000000000000777776100000006677777700000000000000000000
11111119971111119711111111111119311331d3333733d300000000000000000000000000000000000000000000000000000000000000000000000000000000
11111119971111119711111111111119333333333333333300000000000000000000000000000000000000000000000000000000000000000000000000000000
111111199711111197111111111111193d333333333d313300000000000000000000000000000000000000000000000000000000000000000000000000000000
11111119971111119711111111111119333331333333333300000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0101010101010101010101010101010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101010101010101010101010101010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101010101010101010101010101010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101010101010101010101010101010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101010101010101010101010101010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101010101010101010101010101010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101010101010101010101010101010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101010101010101010101010101010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101010101010101010101010101010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
